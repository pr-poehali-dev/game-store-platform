import { useState } from 'react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';

interface Game {
  id: number;
  name: string;
  image?: string;
}

export default function MainDashboard() {
  const [searchQuery, setSearchQuery] = useState('');
  const [showRequestForm, setShowRequestForm] = useState(false);
  const [requestType, setRequestType] = useState<'game' | 'subscription' | null>(null);
  const [formData, setFormData] = useState({
    gameName: '',
    email: '',
    message: '',
  });

  const games: Game[] = [
    { id: 1, name: 'Cyberpunk 2077' },
    { id: 2, name: 'Valorant' },
    { id: 3, name: 'CS:GO' },
    { id: 4, name: 'Elden Ring' },
    { id: 5, name: 'The Witcher 3' },
    { id: 6, name: 'GTA V' },
  ];

  const features = [
    {
      icon: 'Gamepad2',
      title: '–ö–∞—Ç–∞–ª–æ–≥ –∏–≥—Ä',
      description: '–ù–∞–π–¥–∏ —Å–≤–æ—é –∏–≥—Ä—É —Å—Ä–µ–¥–∏ —Ç—ã—Å—è—á –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤',
      action: () => document.getElementById('games-section')?.scrollIntoView({ behavior: 'smooth' }),
    },
    {
      icon: 'Users',
      title: '–°–æ—Ü—Å–µ—Ç—å –≥–µ–π–º–µ—Ä–æ–≤',
      description: '–û–±—â–∞–π—Å—è —Å –¥—Ä—É–∑—å—è–º–∏ –∏ –Ω–∞—Ö–æ–¥–∏ –Ω–æ–≤—ã—Ö',
      link: '/social',
    },
    {
      icon: 'Trophy',
      title: '–¢—É—Ä–Ω–∏—Ä—ã',
      description: '–£—á–∞—Å—Ç–≤—É–π –≤ —Ç—É—Ä–Ω–∏—Ä–∞—Ö –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π –ø—Ä–∏–∑—ã',
      link: '/tournaments',
    },
    {
      icon: 'Video',
      title: '–°—Ç—Ä–∏–º–∏–Ω–≥',
      description: '–°–º–æ—Ç—Ä–∏ –∏ —Å—Ç—Ä–∏–º—å –∏–≥—Ä—ã',
      link: '/streams',
    },
    {
      icon: 'ShoppingBag',
      title: '–ú–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å',
      description: '–ü–æ–∫—É–ø–∞–π –∏ –ø—Ä–æ–¥–∞–≤–∞–π –∏–≥—Ä–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã',
      link: '/marketplace',
    },
    {
      icon: 'Package',
      title: '–õ—É—Ç–±–æ–∫—Å—ã',
      description: '–û—Ç–∫—Ä—ã–≤–∞–π –∫–µ–π—Å—ã –∏ –ø–æ–ª—É—á–∞–π –Ω–∞–≥—Ä–∞–¥—ã',
      link: '/lootbox',
    },
    {
      icon: 'Target',
      title: 'Battle Pass',
      description: '100 —É—Ä–æ–≤–Ω–µ–π —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥',
      link: '/battlepass',
    },
    {
      icon: 'Gift',
      title: '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã',
      description: '–ó–∞—Ö–æ–¥–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –∏ –ø–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã',
      link: '/rewards',
    },
    {
      icon: 'Dices',
      title: '–ö–∞–∑–∏–Ω–æ',
      description: '–ò—Å–ø—ã—Ç–∞–π —É–¥–∞—á—É –≤ —Ä—É–ª–µ—Ç–∫–µ –∏ —Å–ª–æ—Ç–∞—Ö',
      link: '/casino',
    },
    {
      icon: 'Star',
      title: '–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
      description: '–°–æ–±–∏—Ä–∞–π —Ç—Ä–æ—Ñ–µ–∏ –∏ –ø–æ–ª—É—á–∞–π –æ—á–∫–∏',
      link: '/achievements',
    },
    {
      icon: 'BarChart3',
      title: '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
      description: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–π —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å',
      link: '/stats',
    },
    {
      icon: 'Shield',
      title: '–ö–ª–∞–Ω—ã',
      description: '–°–æ–∑–¥–∞–≤–∞–π –∫–ª–∞–Ω—ã –∏ –≤–æ—é–π —Å –¥—Ä—É–≥–∏–º–∏',
      link: '/clans',
    },
  ];

  const filteredGames = games.filter(game =>
    game.name.toLowerCase().includes(searchQuery.toLowerCase())
  );

  const handleSubmitRequest = () => {
    alert(`–ó–∞—è–≤–∫–∞ –Ω–∞ ${requestType === 'game' ? '–∏–≥—Ä—É' : '–ø–æ–¥–ø–∏—Å–∫—É'} "${formData.gameName}" –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!`);
    setShowRequestForm(false);
    setFormData({ gameName: '', email: '', message: '' });
  };

  return (
    <div className="min-h-screen bg-background">
      <div className="relative bg-gradient-to-r from-blue-600 to-purple-600 text-white py-20 px-4">
        <div className="max-w-6xl mx-auto text-center">
          <h1 className="text-5xl md:text-6xl font-bold mb-6">
            üéÆ –ò–≥—Ä–æ–≤–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞
          </h1>
          <p className="text-xl md:text-2xl mb-8 opacity-90">
            –í—Å—ë –¥–ª—è –≥–µ–π–º–µ—Ä–æ–≤ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ: –∏–≥—Ä—ã, —Ç—É—Ä–Ω–∏—Ä—ã, —Å–æ—Ü—Å–µ—Ç—å, –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!
          </p>
          
          <div className="max-w-2xl mx-auto mb-8">
            <div className="relative">
              <Icon name="Search" size={20} className="absolute left-4 top-1/2 -translate-y-1/2 text-gray-400" />
              <Input
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                placeholder="–ù–∞–π—Ç–∏ –∏–≥—Ä—É –∏–ª–∏ —Ñ—É–Ω–∫—Ü–∏—é..."
                className="pl-12 h-14 text-lg bg-white text-black"
              />
            </div>
          </div>

          <div className="flex flex-wrap gap-3 justify-center">
            <Button 
              size="lg" 
              variant="secondary"
              onClick={() => {
                setRequestType('game');
                setShowRequestForm(true);
              }}
            >
              <Icon name="Plus" size={20} className="mr-2" />
              –ó–∞—è–≤–∫–∞ –Ω–∞ –∏–≥—Ä—É
            </Button>
            <Button 
              size="lg" 
              variant="secondary"
              onClick={() => {
                setRequestType('subscription');
                setShowRequestForm(true);
              }}
            >
              <Icon name="Sparkles" size={20} className="mr-2" />
              –ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É
            </Button>
          </div>
        </div>
      </div>

      <div className="max-w-7xl mx-auto px-4 py-12">
        <div className="mb-12">
          <h2 className="text-3xl font-bold mb-6">üéØ –í—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
            {features.map((feature, index) => (
              <Card
                key={index}
                className="p-6 hover:shadow-xl transition-all cursor-pointer group"
                onClick={() => feature.link ? window.location.href = feature.link : feature.action?.()}
              >
                <div className="w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mb-4 group-hover:scale-110 transition-transform">
                  <Icon name={feature.icon as any} size={24} className="text-primary" />
                </div>
                <h3 className="font-bold mb-2">{feature.title}</h3>
                <p className="text-sm text-muted-foreground">{feature.description}</p>
              </Card>
            ))}
          </div>
        </div>

        <div id="games-section" className="mb-12">
          <div className="flex items-center justify-between mb-6">
            <h2 className="text-3xl font-bold">üéÆ –ö–∞—Ç–∞–ª–æ–≥ –∏–≥—Ä</h2>
            <Badge className="text-lg px-4 py-2">{games.length} –∏–≥—Ä</Badge>
          </div>
          
          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4">
            {filteredGames.map((game) => (
              <Card
                key={game.id}
                className="p-4 hover:shadow-lg transition-all cursor-pointer group"
              >
                <div className="aspect-square bg-gradient-to-br from-gray-200 to-gray-300 dark:from-gray-700 dark:to-gray-800 rounded-lg mb-3 flex items-center justify-center overflow-hidden">
                  {game.image ? (
                    <img src={game.image} alt={game.name} className="w-full h-full object-cover" />
                  ) : (
                    <Icon name="Gamepad2" size={48} className="text-gray-400" />
                  )}
                </div>
                <h3 className="font-bold text-sm text-center group-hover:text-primary transition-colors">
                  {game.name}
                </h3>
              </Card>
            ))}
          </div>

          {filteredGames.length === 0 && (
            <Card className="p-12 text-center">
              <Icon name="Search" size={48} className="mx-auto mb-4 opacity-30" />
              <p className="text-muted-foreground mb-4">–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</p>
              <Button onClick={() => {
                setRequestType('game');
                setShowRequestForm(true);
              }}>
                <Icon name="Plus" size={16} className="mr-2" />
                –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∏–≥—Ä—É
              </Button>
            </Card>
          )}
        </div>
      </div>

      {showRequestForm && (
        <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4">
          <Card className="w-full max-w-lg p-6">
            <div className="flex items-center justify-between mb-6">
              <h3 className="text-2xl font-bold">
                {requestType === 'game' ? 'üéÆ –ó–∞—è–≤–∫–∞ –Ω–∞ –∏–≥—Ä—É' : '‚ú® –ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É'}
              </h3>
              <Button variant="ghost" size="icon" onClick={() => setShowRequestForm(false)}>
                <Icon name="X" size={20} />
              </Button>
            </div>

            <div className="space-y-4">
              <div>
                <label className="text-sm font-medium mb-2 block">
                  –ù–∞–∑–≤–∞–Ω–∏–µ {requestType === 'game' ? '–∏–≥—Ä—ã' : '–ø–æ–¥–ø–∏—Å–∫–∏'}
                </label>
                <Input
                  value={formData.gameName}
                  onChange={(e) => setFormData({ ...formData, gameName: e.target.value })}
                  placeholder={`–ù–∞–ø—Ä–∏–º–µ—Ä: ${requestType === 'game' ? 'Minecraft' : 'Xbox Game Pass'}`}
                />
              </div>

              <div>
                <label className="text-sm font-medium mb-2 block">Email –¥–ª—è —Å–≤—è–∑–∏</label>
                <Input
                  type="email"
                  value={formData.email}
                  onChange={(e) => setFormData({ ...formData, email: e.target.value })}
                  placeholder="your@email.com"
                />
              </div>

              <div>
                <label className="text-sm font-medium mb-2 block">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</label>
                <Textarea
                  value={formData.message}
                  onChange={(e) => setFormData({ ...formData, message: e.target.value })}
                  placeholder="–û–ø–∏—à–∏—Ç–µ –ø–æ—á–µ–º—É –≤–∞–º –Ω—É–∂–Ω–∞ —ç—Ç–∞ –∏–≥—Ä–∞/–ø–æ–¥–ø–∏—Å–∫–∞..."
                  rows={4}
                />
              </div>

              <Button
                className="w-full"
                size="lg"
                onClick={handleSubmitRequest}
                disabled={!formData.gameName || !formData.email}
              >
                <Icon name="Send" size={20} className="mr-2" />
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
              </Button>
            </div>
          </Card>
        </div>
      )}
    </div>
  );
}
