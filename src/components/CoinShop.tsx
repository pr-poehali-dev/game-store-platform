import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import Icon from '@/components/ui/icon';
import { Badge } from '@/components/ui/badge';
import { CoinShop as CoinShopItem, Currency } from '@/types/economy';
import { useToast } from '@/hooks/use-toast';

interface CoinShopProps {
  currency: Currency;
  onPurchase: (item: CoinShopItem) => void;
}

export const CoinShop = ({ currency, onPurchase }: CoinShopProps) => {
  const { toast } = useToast();

  const shopItems: CoinShopItem[] = [
    {
      id: 'discount-5',
      name: '–°–∫–∏–¥–∫–∞ 5%',
      description: '–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ —Å–∫–∏–¥–∫—É 5% –Ω–∞ –ª—é–±—É—é –ø–æ–∫—É–ø–∫—É',
      cost: 500,
      currency: 'coins',
      type: 'discount',
      value: 5,
      icon: 'Ticket',
    },
    {
      id: 'discount-10',
      name: '–°–∫–∏–¥–∫–∞ 10%',
      description: '–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ —Å–∫–∏–¥–∫—É 10% –Ω–∞ –ª—é–±—É—é –ø–æ–∫—É–ø–∫—É',
      cost: 1000,
      currency: 'coins',
      type: 'discount',
      value: 10,
      icon: 'Ticket',
    },
    {
      id: 'discount-20',
      name: '–°–∫–∏–¥–∫–∞ 20%',
      description: '–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ —Å–∫–∏–¥–∫—É 20% –Ω–∞ –ª—é–±—É—é –ø–æ–∫—É–ø–∫—É',
      cost: 2500,
      currency: 'coins',
      type: 'discount',
      value: 20,
      icon: 'Ticket',
    },
    {
      id: 'xp-boost-2x',
      name: 'XP –ë—É—Å—Ç–µ—Ä x2',
      description: '–£–¥–≤–æ–µ–Ω–Ω—ã–π –æ–ø—ã—Ç –Ω–∞ 24 —á–∞—Å–∞',
      cost: 800,
      currency: 'coins',
      type: 'boost',
      value: 2,
      icon: 'Zap',
    },
    {
      id: 'coin-boost-1.5x',
      name: '–ú–æ–Ω–µ—Ç–Ω—ã–π –±—É—Å—Ç–µ—Ä x1.5',
      description: '–ü–æ–ª—É—á–∞–π –Ω–∞ 50% –±–æ–ª—å—à–µ –∫–æ–∏–Ω–æ–≤ 24 —á–∞—Å–∞',
      cost: 1200,
      currency: 'coins',
      type: 'boost',
      value: 1.5,
      icon: 'TrendingUp',
    },
    {
      id: 'avatar-frame-gold',
      name: '–ó–æ–ª–æ—Ç–∞—è —Ä–∞–º–∫–∞',
      description: '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞—è —Ä–∞–º–∫–∞ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞',
      cost: 50,
      currency: 'gems',
      type: 'cosmetic',
      icon: 'Frame',
    },
    {
      id: 'avatar-frame-diamond',
      name: '–ê–ª–º–∞–∑–Ω–∞—è —Ä–∞–º–∫–∞',
      description: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è —Ä–∞–º–∫–∞ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–∞',
      cost: 100,
      currency: 'gems',
      type: 'cosmetic',
      icon: 'Crown',
    },
    {
      id: 'premium-7d',
      name: 'Premium –Ω–∞ 7 –¥–Ω–µ–π',
      description: '–í—Å–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ Premium –ø–æ–¥–ø–∏—Å–∫–∏',
      cost: 150,
      currency: 'gems',
      type: 'premium',
      icon: 'Star',
    },
  ];

  const handlePurchase = (item: CoinShopItem) => {
    const hasEnough =
      item.currency === 'coins'
        ? currency.coins >= item.cost
        : currency.gems >= item.cost;

    if (!hasEnough) {
      toast({
        title: '‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤',
        description: `–í–∞–º –Ω—É–∂–Ω–æ –µ—â—ë ${item.cost - (item.currency === 'coins' ? currency.coins : currency.gems)} ${item.currency === 'coins' ? 'GCoins' : '–≥–µ–º–æ–≤'}`,
        variant: 'destructive',
      });
      return;
    }

    onPurchase(item);
    toast({
      title: '‚úÖ –ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞!',
      description: `–í—ã –∫—É–ø–∏–ª–∏: ${item.name}`,
    });
  };

  const getTypeColor = (type: string) => {
    switch (type) {
      case 'discount':
        return 'bg-green-500/20 text-green-500 border-green-500/30';
      case 'boost':
        return 'bg-blue-500/20 text-blue-500 border-blue-500/30';
      case 'cosmetic':
        return 'bg-purple-500/20 text-purple-500 border-purple-500/30';
      case 'premium':
        return 'bg-yellow-500/20 text-yellow-500 border-yellow-500/30';
      default:
        return 'bg-muted text-muted-foreground';
    }
  };

  const getTypeLabel = (type: string) => {
    switch (type) {
      case 'discount':
        return '–°–∫–∏–¥–∫–∞';
      case 'boost':
        return '–ë—É—Å—Ç–µ—Ä';
      case 'cosmetic':
        return '–ö–æ—Å–º–µ—Ç–∏–∫–∞';
      case 'premium':
        return 'Premium';
      default:
        return type;
    }
  };

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <h2 className="text-3xl font-bold flex items-center gap-2">
          <Icon name="Store" size={32} className="text-primary" />
          –ú–∞–≥–∞–∑–∏–Ω GCoins
        </h2>
        <div className="flex gap-4">
          <div className="flex items-center gap-2 px-4 py-2 rounded-lg bg-yellow-500/20 border border-yellow-500/30">
            <Icon name="Coins" size={20} className="text-yellow-500" />
            <span className="font-bold">{currency.coins.toLocaleString()}</span>
          </div>
          <div className="flex items-center gap-2 px-4 py-2 rounded-lg bg-purple-500/20 border border-purple-500/30">
            <Icon name="Gem" size={20} className="text-purple-500" />
            <span className="font-bold">{currency.gems.toLocaleString()}</span>
          </div>
        </div>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
        {shopItems.map((item) => {
          const hasEnough =
            item.currency === 'coins'
              ? currency.coins >= item.cost
              : currency.gems >= item.cost;

          return (
            <Card
              key={item.id}
              className={`p-6 transition-all hover:scale-105 ${!hasEnough ? 'opacity-50' : ''}`}
            >
              <div className="space-y-4">
                <div className="flex items-start justify-between">
                  <div
                    className={`p-3 rounded-lg ${
                      item.currency === 'coins'
                        ? 'bg-yellow-500/20'
                        : 'bg-purple-500/20'
                    }`}
                  >
                    <Icon name={item.icon as any} size={24} />
                  </div>
                  <Badge className={getTypeColor(item.type)}>
                    {getTypeLabel(item.type)}
                  </Badge>
                </div>

                <div>
                  <h3 className="font-bold text-lg mb-1">{item.name}</h3>
                  <p className="text-sm text-muted-foreground">{item.description}</p>
                </div>

                <div className="flex items-center justify-between pt-4 border-t">
                  <div className="flex items-center gap-2">
                    <Icon
                      name={item.currency === 'coins' ? 'Coins' : 'Gem'}
                      size={20}
                      className={
                        item.currency === 'coins' ? 'text-yellow-500' : 'text-purple-500'
                      }
                    />
                    <span className="text-xl font-bold">{item.cost}</span>
                  </div>
                  <Button
                    onClick={() => handlePurchase(item)}
                    disabled={!hasEnough}
                    size="sm"
                  >
                    {hasEnough ? '–ö—É–ø–∏—Ç—å' : '–ù—É–∂–Ω–æ –±–æ–ª—å—à–µ'}
                  </Button>
                </div>
              </div>
            </Card>
          );
        })}
      </div>

      <Card className="p-6 bg-gradient-to-r from-primary/20 to-purple-500/20">
        <div className="flex items-center gap-4">
          <Icon name="Lightbulb" size={32} className="text-primary" />
          <div>
            <h3 className="font-bold text-lg mb-1">–ö–∞–∫ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å GCoins?</h3>
            <ul className="text-sm text-muted-foreground space-y-1">
              <li>‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã ‚Äî –¥–æ 500 –∫–æ–∏–Ω–æ–≤ –≤ –¥–µ–Ω—å</li>
              <li>üéÆ –ü–æ–∫—É–ø–∫–∞ –∏–≥—Ä ‚Äî 5% –æ—Ç —Å—É–º–º—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∫–æ–∏–Ω–∞–º–∏</li>
              <li>üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è ‚Äî –≤—ã–ø–æ–ª–Ω—è–π –∑–∞–¥–∞–Ω–∏—è –∏ –ø–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã</li>
              <li>üéØ –¢—É—Ä–Ω–∏—Ä—ã ‚Äî –ø–æ–±–µ–∂–¥–∞–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π</li>
              <li>üìù –û—Ç–∑—ã–≤—ã ‚Äî 50 –∫–æ–∏–Ω–æ–≤ –∑–∞ –∫–∞–∂–¥—ã–π –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Ç–∑—ã–≤</li>
            </ul>
          </div>
        </div>
      </Card>
    </div>
  );
};
