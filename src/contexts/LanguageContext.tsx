import { createContext, useContext, useState, ReactNode } from 'react';

type Language = 'ru' | 'en' | 'tr' | 'uk' | 'zh';

interface LanguageContextType {
  language: Language;
  setLanguage: (lang: Language) => void;
  t: (key: string) => string;
}

const translations: Record<Language, Record<string, string>> = {
  ru: {
    'nav.home': '–ì–ª–∞–≤–Ω–∞—è',
    'nav.catalog': '–ö–∞—Ç–∞–ª–æ–≥',
    'nav.tournaments': '–¢—É—Ä–Ω–∏—Ä—ã',
    'nav.profile': '–ü—Ä–æ—Ñ–∏–ª—å',
    'search.placeholder': '–ü–æ–∏—Å–∫ –∏–≥—Ä...',
    'cart.title': '–ö–æ—Ä–∑–∏–Ω–∞',
    'cart.empty': '–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞',
    'cart.total': '–ò—Ç–æ–≥–æ',
    'checkout': '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑',
    'add_to_cart': '–í –∫–æ—Ä–∑–∏–Ω—É',
    'buy_now': '–ö—É–ø–∏—Ç—å —Å–µ–π—á–∞—Å',
    'discount': '–°–∫–∏–¥–∫–∞',
    'new_game': '–ù–æ–≤–∏–Ω–∫–∞',
    'hot_game': '–•–∏—Ç',
    'platform': '–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞',
    'category': '–ö–∞—Ç–µ–≥–æ—Ä–∏—è',
    'price': '–¶–µ–Ω–∞',
    'rating': '–†–µ–π—Ç–∏–Ω–≥',
  },
  en: {
    'nav.home': 'Home',
    'nav.catalog': 'Catalog',
    'nav.tournaments': 'Tournaments',
    'nav.profile': 'Profile',
    'search.placeholder': 'Search games...',
    'cart.title': 'Cart',
    'cart.empty': 'Cart is empty',
    'cart.total': 'Total',
    'checkout': 'Checkout',
    'add_to_cart': 'Add to Cart',
    'buy_now': 'Buy Now',
    'discount': 'Discount',
    'new_game': 'New',
    'hot_game': 'Hot',
    'platform': 'Platform',
    'category': 'Category',
    'price': 'Price',
    'rating': 'Rating',
  },
  tr: {
    'nav.home': 'Ana Sayfa',
    'nav.catalog': 'Katalog',
    'nav.tournaments': 'Turnuvalar',
    'nav.profile': 'Profil',
    'search.placeholder': 'Oyun ara...',
    'cart.title': 'Sepet',
    'cart.empty': 'Sepet bo≈ü',
    'cart.total': 'Toplam',
    'checkout': '√ñdeme Yap',
    'add_to_cart': 'Sepete Ekle',
    'buy_now': '≈ûimdi Satƒ±n Al',
    'discount': 'ƒ∞ndirim',
    'new_game': 'Yeni',
    'hot_game': 'Pop√ºler',
    'platform': 'Platform',
    'category': 'Kategori',
    'price': 'Fiyat',
    'rating': 'Deƒüerlendirme',
  },
  uk: {
    'nav.home': '–ì–æ–ª–æ–≤–Ω–∞',
    'nav.catalog': '–ö–∞—Ç–∞–ª–æ–≥',
    'nav.tournaments': '–¢—É—Ä–Ω—ñ—Ä–∏',
    'nav.profile': '–ü—Ä–æ—Ñ—ñ–ª—å',
    'search.placeholder': '–ü–æ—à—É–∫ —ñ–≥–æ—Ä...',
    'cart.title': '–ö–æ—à–∏–∫',
    'cart.empty': '–ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π',
    'cart.total': '–†–∞–∑–æ–º',
    'checkout': '–û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è',
    'add_to_cart': '–î–æ –∫–æ—à–∏–∫–∞',
    'buy_now': '–ö—É–ø–∏—Ç–∏ –∑–∞—Ä–∞–∑',
    'discount': '–ó–Ω–∏–∂–∫–∞',
    'new_game': '–ù–æ–≤–∏–Ω–∫–∞',
    'hot_game': '–•—ñ—Ç',
    'platform': '–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞',
    'category': '–ö–∞—Ç–µ–≥–æ—Ä—ñ—è',
    'price': '–¶—ñ–Ω–∞',
    'rating': '–†–µ–π—Ç–∏–Ω–≥',
  },
  zh: {
    'nav.home': 'È¶ñÈ°µ',
    'nav.catalog': 'ÁõÆÂΩï',
    'nav.tournaments': 'Èî¶Ê†áËµõ',
    'nav.profile': '‰∏™‰∫∫ËµÑÊñô',
    'search.placeholder': 'ÊêúÁ¥¢Ê∏∏Êàè...',
    'cart.title': 'Ë¥≠Áâ©ËΩ¶',
    'cart.empty': 'Ë¥≠Áâ©ËΩ¶ÊòØÁ©∫ÁöÑ',
    'cart.total': 'ÊÄªËÆ°',
    'checkout': 'ÁªìË¥¶',
    'add_to_cart': 'Âä†ÂÖ•Ë¥≠Áâ©ËΩ¶',
    'buy_now': 'Á´ãÂç≥Ë¥≠‰π∞',
    'discount': 'ÊäòÊâ£',
    'new_game': 'Êñ∞ÂìÅ',
    'hot_game': 'ÁÉ≠Èó®',
    'platform': 'Âπ≥Âè∞',
    'category': 'Á±ªÂà´',
    'price': '‰ª∑Ê†º',
    'rating': 'ËØÑÂàÜ',
  },
};

const LanguageContext = createContext<LanguageContextType | undefined>(
  undefined
);

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error('useLanguage must be used within LanguageProvider');
  }
  return context;
};

export const LanguageProvider = ({ children }: { children: ReactNode }) => {
  const [language, setLanguage] = useState<Language>(() => {
    const saved = localStorage.getItem('language');
    return (saved as Language) || 'ru';
  });

  const handleSetLanguage = (lang: Language) => {
    setLanguage(lang);
    localStorage.setItem('language', lang);
  };

  const t = (key: string): string => {
    return translations[language][key] || key;
  };

  return (
    <LanguageContext.Provider
      value={{ language, setLanguage: handleSetLanguage, t }}
    >
      {children}
    </LanguageContext.Provider>
  );
};

export const LANGUAGES = [
  { code: 'ru' as Language, name: '–†—É—Å—Å–∫–∏–π', flag: 'üá∑üá∫' },
  { code: 'en' as Language, name: 'English', flag: 'üá∫üá∏' },
  { code: 'tr' as Language, name: 'T√ºrk√ße', flag: 'üáπüá∑' },
  { code: 'uk' as Language, name: '–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞', flag: 'üá∫üá¶' },
  { code: 'zh' as Language, name: '‰∏≠Êñá', flag: 'üá®üá≥' },
];
